此结构使用一个json格式保存数据

{
	id:流程唯一标识
	name:流程名称，显示给外部人员看。
	version:版本号，
	description:此流程的描述,
	variables:流程所使用的变量

	nodes:[ 此处保存所有的任务节点
		{
			type:节点的类型:允许的值:USERTASK, START, END, MULTITASK, PARALLELGATEWAY, SERIALGATEWAY.
			id: 此节点唯一标识.
			name:显示给用户看的节点名称
			description: 针对此任务的说明

			module:节点对应的模块
			handle:节点对应的操作

			assignees:办理人列表，使用‘,’分隔，允许指定部门、部门岗位、岗位、人员。。多实例时此处所指定所有人均需要办理。串行根据前后顺序进行。用户任务仅需要一个人办理过即完成。
			durationTime:任务从办理开始持续时长，超时将触发事件.这是一个LONG型的表明时间长度的值。

			canModifyColumn: 允许在此节点修改的字段Id，设计时指定，对应表单控件的Id.使用‘，’分隔，不设置表示所有允许
			canSeeColumn:允许在此节点看到的字段Id。All 对应所有。使用‘，’分隔，不设置表示所有允许

			variable:任务所使用的变量
		}...
	],
	links:[ 此处保存任务节点之间的连接线
		{
			id: 唯一标识
			from: 出发节点
			to: 到达节点
			condition: 条件表达式，计算出来应该是一个bool型值，以判断是否需要从向下一个节点流程转
		}...
	]
}


每一个流程必须有开始节点和结束节点。
开始节点仅有出线
结束节点仅有入线
其余节点必须有进入连线和出连接，可以有多条。
任务必须指定模块操作
任务必须指定办理人
任务必须有Id和name字段
连接线必须有from 和to 字段